name: CI

on:
  # We run CI on pushes to the main branch
  push:
    branches:
      - main
  # and on all pull requests to the main branch
  pull_request:
    branches:
      - main
  # as well as upon manual triggers through the 'Actions' tab of the Github UI
  workflow_dispatch:

jobs:
  test:
    name: Testing on ${{ matrix.os }} with Python ${{ matrix.python-version }} and MPI=${{ matrix.parallel }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"]
        parallel: ["ON", "OFF"]
        exclude:
          - os: windows-latest
            parallel: "ON"

    steps:
      - name: Checking out the repository
        uses: actions/checkout@v4

      - name: Installing system dependencies
        if: matrix.parallel == 'ON' && runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libopenmpi-dev

      - name: Installing system dependencies
        if: matrix.parallel == 'ON' && runner.os == 'MacOS'
        run: |
          brew install open-mpi

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install sequential Python package
        if: matrix.parallel == 'OFF'
        shell: bash
        run: |
          sed -i.bak 's|"mpi4py",||g' pyproject.toml
          python -m pip install -v .[tests,jupyter]
        env:
          CMAKE_ARGS: "-DFORCE_SEQUENTIAL=ON"

      - name: Install parallel Python package
        if: matrix.parallel == 'ON'
        run: |
          python -m pip install -v .[tests,jupyter]

      - name: Run sequential test suite
        run: |
          python -m pytest

      - name: Run Jupyter notebook tests
        # We restrict this to the Linux runner to circumvent a stupid
        # problem in nbval with the MacOS runner being to slow:
        # https://github.com/computationalmodelling/nbval/issues/151
        if: matrix.parallel == 'ON' && runner.os == 'Linux'
        run: |
          python -m pytest --nbval

      - name: Run parallel test suite
        if: matrix.parallel == 'ON'
        run: |
          mpirun --oversubscribe -np 4 python -m pytest --only-mpi

  coverage:
    name: Coverage Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checking out the repository
        uses: actions/checkout@v4

      - name: Installing system dependencies
        run: |
          sudo apt update
          sudo apt install libopenmpi-dev lcov

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install parallel Python package
        run: |
          python -m pip install -v -e .[tests,jupyter]
        env:
          CMAKE_ARGS: -DCMAKE_CXX_FLAGS=--coverage

      - name: Run test suite
        working-directory: ./test
        run: |
          python -m pytest --cov --cov-report=xml --with-mpi

      - name: Collect C++ coverage report
        run: |
          lcov --directory _skbuild --capture --output-file coverage.info
          lcov_cobertura coverage.info -o coverage2.xml

      - name: Upload C++ coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          files: ./coverage2.xml
          verbose: true

      - name: Upload Python coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          files: ./test/coverage.xml
          verbose: true
