name: Build Wheels + PyPI deploy

on:
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            arch: "x86_64"
          - os: macos-12
            arch: "x86_64"
          - os: windows-2019
            arch: "AMD64"
          - os: windows-2019
            arch: "x86"

    steps:
    - uses: actions/checkout@v3

    - name: Build wheels (arch=${{ matrix.arch }})
      uses: pypa/cibuildwheel@v2.13
      env:
        CIBW_ARCHS: "${{ matrix.arch }}"

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  build-sdist:
    name: Build Source distribution
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Install MPI
        run: |
          sudo apt update
          sudo apt install libopenmpi-dev

      - name: Build SDist
        run: |
          pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: dist/*.tar.gz

  test-sdist:
    name: Test source distribution on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [build-sdist]
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        fftw:
          - bundled
          - system
    steps:
      - uses: actions/checkout@v3

      - name: Install MPI
        run: |
          sudo apt update
          sudo apt install libopenmpi-dev

      - name: Install FFTW
        if: matrix.fftw == 'system'
        run: |
          sudo apt install libfftw3-dev libfftw3-mpi-dev

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Install from SDist
        shell: bash
        run: |
          python -m pip install dist/*.tar.gz
          python -m pip install pytest pytest-mpi

      - name: Run test suite
        run:
          mpirun --oversubscribe -np 4 python -m pytest --only-mpi

  upload_pypi:
    needs: [build-sdist, build-wheels, test-sdist]
    runs-on: ubuntu-latest
    if: github.repository_owner == 'parafields'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
