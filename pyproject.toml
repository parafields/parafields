# This section describes the requirements of the build/installation
# process itself. Being able to do this was the original reason to
# introduce pyproject.toml
[build-system]
requires = [
    "setuptools",
    "wheel",
    "scikit-build",
    "cmake>=3.20",
    "ninja",
    "pybind11[global]==2.9.2",
    "mpi4py",
]
build-backend = "setuptools.build_meta"

# This section provides general project metadata that is used across
# a variety of build tools. Notably, the version specified here is the
# single source of truth for parafieldsseq's version
[project]
name = "parafields"
version = "1.0.2"
description = "Parallel Parameter Fields for Uncertainty Quantification"
readme = "README.md"
maintainers = [
    { name = "Dominic Kempf", email = "dominic.kempf@iwr.uni-heidelberg.de" },
]
requires-python = ">=3.8"
license = { text = "BSD-3" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
]
dependencies = [
    "jsonschema<4",
    "matplotlib",
    "mpi4py",
    "numpy",
    "Pillow",
]

[project.optional-dependencies]
docs = [
    "docutils<0.17",
    "ipykernel",
    "nbsphinx",
    "nbsphinx-link",
    "sphinx",
    "sphinx_mdinclude",
    "sphinx_rtd_theme",
]
jupyter = [
    "IPython",
    "ipywidgets",
    "ipywidgets-jsonschema",
    "wrapt",
]
tests = [
    "lcov_cobertura",
    "nbval",
    "pytest",
    "pytest-cov",
    "pytest-mpi",
]

# NB: Setuptools-specific build options are currently still stored
#     in setup.py, as scikit-build is not (yet) supporting PEP621.
#     Later on, these will be stored in [tool.setuptools]

# The following is the configuration for the pytest test suite
[tool.pytest.ini_options]
testpaths = ["test", "jupyter"]
addopts = ["--ignore=jupyter/fenicsx.ipynb"]

# The next section configures building wheels in Continuous Integration
# The cibuildwheel documentation covers the available options in detail:
# https://cibuildwheel.readthedocs.io/en/stable/options/
[tool.cibuildwheel]
# The variables in this section allow you to customize the process how the wheels
# for the Python packages are built. For a list of options, see this
# page: https://cibuildwheel.readthedocs.io/en/stable/options/

# We remove the mpi4py dependency from the package, as our builds
# are using wheels to provide a sequential version of the library
before-all = "sed -i.bak 's/\"mpi4py\",//g' pyproject.toml"

# Verbose output is helpful for understanding CI failures
build-verbosity = 3

# We restrict ourselves to recent Python versions
skip = "pp* *p27-* cp35-* cp36-* cp37-* *musllinux*"

# Testing commands for our wheels
test-command = "pytest {package}/test"
test-requires = ["pytest"]
